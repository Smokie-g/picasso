{"version":3,"file":"static/js/312.84275d34.chunk.js","mappings":"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","sources":["components/Header.tsx","components/BackButton.tsx","components/SupportContainer.tsx","pages/MainPage/components/RowItem/RowItem.tsx","pages/MainPage/components/ListItem/ListItem.tsx","pages/MainPage/MainPage.tsx","utils/constants.ts","utils/enums.ts"],"sourcesContent":["import React, { FC, ReactNode } from 'react'\nimport { styled } from 'styled-components'\nimport { HEADER_HEIGHT } from '../utils'\n\ninterface IHeader {\n  children: ReactNode\n}\n\nconst HeaderWrapper = styled.div`\n  height: ${HEADER_HEIGHT}px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  position: fixed;\n`\n\nexport const Header: FC<IHeader> = ({ children }) => (\n  <HeaderWrapper>{children}</HeaderWrapper>\n)\n","import React from 'react'\nimport { styled } from 'styled-components'\n\ninterface IProps {\n  onClick(): void\n}\n\nconst BackButtonContainer = styled.div`\n  display: flex;\n  cursor: pointer;\n`\nconst ButtonContainer = styled.div`\n  border: 1px solid #3a76e6;\n  border-radius: 7px;\n  margin-right: 8px;\n  padding-left: 4px;\n  padding-right: 4px;\n  &:hover {\n    background: #f8fafb;\n  }\n`\nconst BackButtonText = styled.p`\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 15px;\n`\n\nexport const BackButton: React.FC<IProps> = ({ onClick }) => (\n  <BackButtonContainer onClick={onClick}>\n    <ButtonContainer>\n      <BackButtonText>Назад</BackButtonText>\n    </ButtonContainer>\n  </BackButtonContainer>\n)\n","import React from 'react'\nimport { styled } from 'styled-components'\n\ninterface IProps {\n  supportText: string\n}\n\nconst Container = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n`\nconst SupportText = styled.p`\n  font-size: 16px;\n`\n\nexport const SupportContainer: React.FC<IProps> = ({ supportText }) => (\n  <Container>\n    <SupportText>{supportText}</SupportText>\n  </Container>\n)\n","import React, { LegacyRef, CSSProperties, FC } from 'react'\nimport { styled } from 'styled-components'\n\ninterface IProps {\n  rowItemRef: LegacyRef<HTMLDivElement>\n  description: string\n  postTitle: string\n  rowId: number\n  style: CSSProperties\n  onClick(): void\n}\n\nconst ItemWrapper = styled.div`\n  box-shadow: 1px 1px 10px #e0e4ef;\n  border-radius: 12px;\n  text-align: left;\n  display: flex;\n  align-items: center;\n`\nconst Content = styled.div`\n  max-width: 95%;\n  padding-left: 16px;\n  padding-right: 16px;\n  padding-bottom: 16px;\n`\nconst TextContainer = styled.div`\n  flex-direction: column;\n`\nconst Title = styled.h4``\nconst Description = styled.p`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\nconst ButtonWrapper = styled.div`\n  display: flex;\n`\nconst Button = styled.button`\n  box-sizing: border-box;\n  align-items: center;\n  background-color: white;\n  border: 1px solid #3a76e6;\n  border-radius: 4px;\n  justify-content: center;\n  text-align: center;\n  font-size: 14px;\n  cursor: pointer;\n  &:hover {\n    background: #f8fafb;\n  }\n`\n\nexport const RowItem: FC<IProps> = ({\n  rowItemRef,\n  description,\n  postTitle,\n  rowId,\n  style,\n  onClick,\n}) => (\n  <ItemWrapper style={style} ref={rowItemRef}>\n    <Content>\n      <TextContainer>\n        <Title>{`${rowId}. ${postTitle}`}</Title>\n        <Description>{description}</Description>\n      </TextContainer>\n      <ButtonWrapper>\n        <Button onClick={onClick}>\n          Просмотр\n        </Button>\n      </ButtonWrapper>\n    </Content>\n  </ItemWrapper>\n)\n","import React, { FC } from 'react'\nimport { styled } from 'styled-components'\nimport {\n  AutoSizer,\n  List,\n  CellMeasurerCache,\n  ListRowProps,\n  Index,\n} from 'react-virtualized'\nimport { HEADER_HEIGHT } from '../../../../utils'\n\ninterface IProps {\n  cache: CellMeasurerCache\n  postsLength: number\n  rowHeight: number | ((params: Index) => number)\n  renderRow: FC<ListRowProps>\n}\n\nconst ListContainer = styled.div`\n  border: 1px solid #f0f0f0;\n  border-radius: 7px;\n  margin-top: ${HEADER_HEIGHT}px;\n  margin-left: 24px;\n  margin-right: 24px;\n`\nconst ListWrapper = styled.div`\n  height: calc(100vh - 96px);\n`\n\nexport const ListItem: FC<IProps> = ({\n  cache,\n  postsLength,\n  renderRow,\n  rowHeight,\n}) => (\n  <ListContainer>\n    <ListWrapper>\n      <AutoSizer>\n        {({ height, width }) => (\n          <List\n            width={width}\n            height={height}\n            deferredMeasurementCache={cache}\n            rowHeight={rowHeight}\n            rowRenderer={renderRow}\n            rowCount={postsLength}\n            overscanRowCount={3}\n          />\n        )}\n      </AutoSizer>\n    </ListWrapper>\n  </ListContainer>\n)\n","import React, { LegacyRef } from 'react'\nimport { styled } from 'styled-components'\nimport { useNavigate } from 'react-router-dom'\nimport {\n  ListRowProps,\n  CellMeasurer,\n  CellMeasurerCache,\n} from 'react-virtualized'\nimport { useGetPostsQuery } from '../../api'\nimport { Header, SupportContainer } from '../../components'\nimport { RowItem, ListItem } from './components'\n\nconst MainLayout = styled.div`\n  overflow: hidden;\n  max-height: 100vh;\n`\nconst Title = styled.h4`\n  font-weight: 600;\n  font-size: 20px;\n  margin-left: 24px;\n`\n\nexport const MainPage: React.FC = () => {\n  const navigate = useNavigate()\n\n  const {\n    data: posts = [],\n    isError,\n    isFetching,\n    isLoading,\n  } = useGetPostsQuery()\n\n  const cache = new CellMeasurerCache({\n    fixedWidth: true,\n    defaultHeight: 100,\n  })\n\n  if (isLoading || isFetching) {\n    return <SupportContainer supportText='Loading...' />\n  }\n\n  if (isError) {\n    return (\n      <SupportContainer supportText='При загрузке данных произошла ошибка' />\n    )\n  }\n\n  const renderRow: React.FC<ListRowProps> = ({ index, key, style, parent }) => (\n    <CellMeasurer\n      key={key}\n      cache={cache}\n      parent={parent}\n      columnIndex={0}\n      rowIndex={index}\n    >\n      {({ registerChild }) => (\n        <RowItem\n          rowItemRef={registerChild as LegacyRef<HTMLDivElement>}\n          description={posts[index].body}\n          rowId={posts[index].id}\n          style={style}\n          postTitle={posts[index].title}\n          onClick={() => navigate(`details/${posts[index].id}`)}\n        />\n      )}\n    </CellMeasurer>\n  )\n\n  return (\n    <MainLayout>\n      <Header>\n        <Title>Список элементов</Title>\n      </Header>\n\n      <ListItem\n        cache={cache}\n        postsLength={posts.length}\n        renderRow={renderRow}\n        rowHeight={cache.rowHeight}\n      />\n    </MainLayout>\n  )\n}\n","export const HEADER_HEIGHT = 80\n","export enum Users {\n  ADMIN = 1,\n  CUSTOMER = 2,\n}\n"],"names":["HeaderWrapper","styled","div","_templateObject","_taggedTemplateLiteral","HEADER_HEIGHT","Header","_ref","children","_jsx","BackButtonContainer","ButtonContainer","_templateObject2","BackButtonText","p","_templateObject3","BackButton","onClick","Container","SupportText","SupportContainer","supportText","ItemWrapper","Content","TextContainer","Title","h4","_templateObject4","Description","_templateObject5","ButtonWrapper","_templateObject6","Button","button","_templateObject7","RowItem","rowItemRef","description","postTitle","rowId","style","ref","_jsxs","concat","ListContainer","ListWrapper","ListItem","cache","postsLength","renderRow","rowHeight","AutoSizer","_ref2","height","width","List","deferredMeasurementCache","rowRenderer","rowCount","overscanRowCount","MainLayout","MainPage","navigate","useNavigate","data","posts","isError","isFetching","isLoading","useGetPostsQuery","CellMeasurerCache","fixedWidth","defaultHeight","length","index","key","parent","CellMeasurer","columnIndex","rowIndex","registerChild","body","id","title","Users"],"sourceRoot":""}